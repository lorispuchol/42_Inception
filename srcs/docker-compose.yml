# Le docker-compose met en place toute l'appli (nb de container, connexion entre eux...)
# -- le docker compose va build les image des 3 services en utilisant docker-build avec chaque dockerfile

version: "3.8"

volumes:
  wp_vol:
    name: wp_vol
    driver: local
    driver_opts:
      device: ${VOLUME_PATH_WP}
      o: bind
      type: none

  mariadb_vol:
    name: mariadb_vol
    driver: local
    driver_opts:
      device: ${VOLUME_PATH_MARIADB}
      o: bind
      type: none

networks:
  inception_net:
    name: inception_net
    driver: bridge

services:
  # mariadb:
  #   image: mariadb_img
  #   container_name: mariadb_ctn
  #   build:
  #     context: ./requirements/mariadb/
  #     dockerfile: DockerfileMariadb
  #   init: true
  #   restart: on-failure
  #   env_file:
  #     - .env
  #   networks:
  #     - inception_net
  #   volumes:
  #     - mariadb_vol:/var/lib/mysql

  # wordpress:
  #   depends_on:
  #     - mariadb
  #   image: wordpress_img
  #   container_name: wordpress_ctn
  #   build:
  #     context: ./requirements/wordpress/
  #     dockerfile: DockerfileWordpress
  #   init: true
  #   restart: on-failure
  #   env_file:
  #     - .env
  #   networks:
  #     - inception_net
  #   volumes:
  #     - wp_vol:/var/www/Inception

  nginx:
    # depends_on:
    #   - wordpress
    image: nginx_img
    container_name: nginx_ctn
    build:
      context: ./requirements/nginx/
      dockerfile: DockerfileNginx
      args:
        - FILES_SITE_PATH=${FILES_SITE_PATH}
    ports:
      - 443:443
      - 80:80
# enlever 80:80
    init: true
    restart: on-failure
    env_file:
      - .env
    networks:
      - inception_net
    volumes:
      - wp_vol:/var/www/Inception
